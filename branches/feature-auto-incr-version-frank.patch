From a62be7ba6cd7ff4026614eb97d5269d5b275b2b8 Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Mon, 16 Jun 2025 19:57:37 -0500
Subject: [PATCH 1/3] feat[#13]: agregar incrementar_build_numer en
 config_modifier.py

---
 src/config_modifier.py | 25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/src/config_modifier.py b/src/config_modifier.py
index 0d7dbf0..0021f28 100644
--- a/src/config_modifier.py
+++ b/src/config_modifier.py
@@ -37,13 +37,34 @@ def incrementar_version(file_path):
     return config["version"]
 
 
+def incrementar_build_number(file_path):
+    """
+    Incrementa el campo "build_number" del archivo JSON.
+    Si el campo no existe, lo crea con valor inicial 1.
+    """
+    config = leer_json(file_path)
+
+    if "build_number" not in config:
+        config["build_number"] = 0
+
+    if not isinstance(config['build_number'], (int, float)):
+        raise TypeError("El campo 'build_number' no es un número")
+
+    config["build_number"] += 1
+    with open(file_path, 'w', encoding='utf-8') as f:
+        json.dump(config, f, indent=4)
+    return config["build_number"]
+
+
 if __name__ == "__main__":
 
     file_path = "config.json"
     try:
         data = leer_json(file_path)
+        version = incrementar_version(file_path)
+        build = incrementar_build_number(file_path)
         print(f"Contenido del archivo '{file_path}': {data}")
-        nueva_version = incrementar_version(file_path)
-        print(f"Versión actualizada correctamente a: {nueva_version}")
+        print(f"Versión actualizada correctamente a: {version}")
+        print(f"Build number actualizado correctamente a: {build}")
     except Exception as e:
         print(f"Error: {e}")
-- 
2.49.0


From 8c6f402e346195bec7acbc43fe7937b0e5a72990 Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Mon, 16 Jun 2025 20:17:01 -0500
Subject: [PATCH 2/3] feat[#13]: agregar test basico en
 tests/test_config_modifier.py

---
 tests/test_config_modifier.py | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index c20fafb..33713fd 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -2,7 +2,7 @@
 
 import pytest
 import json
-from src.config_modifier import leer_json, incrementar_version
+from src.config_modifier import leer_json, incrementar_version, incrementar_build_number
 
 
 @pytest.fixture
@@ -48,3 +48,23 @@ def test_incrementar_version_tipo_incorrecto(tmp_path):
         json.dump({"version": "uno"}, f)
     with pytest.raises(TypeError):
         incrementar_version(file_path)
+
+
+@pytest.fixture
+def json_con_build_number(tmp_path):
+    """Fixture para pruebas con build_number"""
+    file_path = tmp_path / "config_build.json"
+    data = {"version": 1.0, "build_number": 5, "name": "Proyecto 10"}
+    with open(file_path, 'w') as f:
+        json.dump(data, f)
+    return file_path
+
+
+def test_incrementar_build_number_existente(json_con_build_number):
+    """Prueba para incrementar build_number cuando ya existe"""
+    nuevo_build = incrementar_build_number(json_con_build_number)
+    assert nuevo_build == 6
+    with open(json_con_build_number) as f:
+        datos = json.load(f)
+    assert datos["build_number"] == 6
+    assert datos["version"] == 1.0
-- 
2.49.0


From 7d8bc977ecb93ba1b696cdb819b7c7e3c74089ba Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Tue, 17 Jun 2025 08:55:37 -0500
Subject: [PATCH 3/3] feat[#13]: agregar tests basicos en
 tests/test_config_modifier.py

---
 tests/test_config_modifier.py | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 33713fd..9c905c7 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -68,3 +68,31 @@ def test_incrementar_build_number_existente(json_con_build_number):
         datos = json.load(f)
     assert datos["build_number"] == 6
     assert datos["version"] == 1.0
+
+
+@pytest.fixture
+def json_sin_build_number(tmp_path):
+    """Fixture para pruebas sin build_number"""
+    file_path = tmp_path / "config_sin_build.json"
+    data = {"version": 1.0, "name": "Test App"}
+    with open(file_path, 'w') as f:
+        json.dump(data, f)
+    return file_path
+
+
+def test_incrementar_build_number_nuevo(json_sin_build_number):
+    """Prueba incrementar build_number cuando no existe"""
+    nuevo_build = incrementar_build_number(json_sin_build_number)
+    assert nuevo_build == 1
+    with open(json_sin_build_number) as f:
+        datos = json.load(f)
+    assert datos["build_number"] == 1
+
+
+def test_incrementar_build_number_tipo_incorrecto(tmp_path):
+    """Prueba error cuando build_number no es un número"""
+    file_path = tmp_path / "build_invalido.json"
+    with open(file_path, 'w') as f:
+        json.dump({"build_number": "cinco"}, f)
+    with pytest.raises(TypeError):
+        incrementar_build_number(file_path)
-- 
2.49.0


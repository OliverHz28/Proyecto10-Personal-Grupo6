From 55c5c837694fef0a3812e0db50fc3a4191e1c263 Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sat, 7 Jun 2025 13:01:31 -0500
Subject: [PATCH 1/6] =?UTF-8?q?inicializar=20configuraci=C3=B3n=20del=20pr?=
 =?UTF-8?q?oyecto?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .github/workflows/pr_validation.yaml | 0
 README.md                            | 9 +++++++++
 pr_simulation/.gitkeep               | 0
 scripts/lint_all.sh                  | 1 +
 src/config_modifier.py               | 0
 tests/test_config_modifier.py        | 0
 6 files changed, 10 insertions(+)
 create mode 100644 .github/workflows/pr_validation.yaml
 create mode 100644 README.md
 create mode 100644 pr_simulation/.gitkeep
 create mode 100644 scripts/lint_all.sh
 create mode 100644 src/config_modifier.py
 create mode 100644 tests/test_config_modifier.py

diff --git a/.github/workflows/pr_validation.yaml b/.github/workflows/pr_validation.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..c2097b0
--- /dev/null
+++ b/README.md
@@ -0,0 +1,9 @@
+# Grupo 6 - PC3-proyecto10
+
+## Team
+
+| Miembro del Equipo | Repositorio Principal |
+| :----------------- | :-------------------- | 
+| **Choquecambi Germain** |  |
+| **Serrano Edy** | | 
+| **Hinojosa Frank** |   | 
\ No newline at end of file
diff --git a/pr_simulation/.gitkeep b/pr_simulation/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/scripts/lint_all.sh b/scripts/lint_all.sh
new file mode 100644
index 0000000..f1f641a
--- /dev/null
+++ b/scripts/lint_all.sh
@@ -0,0 +1 @@
+#!/usr/bin/env bash
diff --git a/src/config_modifier.py b/src/config_modifier.py
new file mode 100644
index 0000000..e69de29
diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
new file mode 100644
index 0000000..e69de29
-- 
2.49.0


From 5f66faf8000d45f6cbe3ef54e537b88f0c3af201 Mon Sep 17 00:00:00 2001
From: Frank Hinojosa <124078849+OliverHz28@users.noreply.github.com>
Date: Sat, 7 Jun 2025 18:15:29 -0500
Subject: [PATCH 2/6] feat : Agregar historias de usuario

Propuesta para la
---
 .github/ISSUE_TEMPLATE/user-story.md | 38 ++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)
 create mode 100644 .github/ISSUE_TEMPLATE/user-story.md

diff --git a/.github/ISSUE_TEMPLATE/user-story.md b/.github/ISSUE_TEMPLATE/user-story.md
new file mode 100644
index 0000000..68544a3
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE/user-story.md
@@ -0,0 +1,38 @@
+---
+name: User Story
+about: Describe this issue template's purpose here.
+title: ''
+labels: ''
+assignees: ''
+
+---
+
+---
+name: User Story
+about: Template for defining clear and structured user stories
+title: "[User Story] <Short Title>"
+labels: ["user story"]
+assignees: ""
+---
+
+## User story  
+
+**As a** _(specific role - e.g., "developer," "admin," "customer")_  
+**I need** _(clear functionality or feature needed)_  
+**So that** _(explain the value or business reason for this feature)_
+
+---
+
+##  **Context & Assumptions**  
+- _List any known constraints, assumptions, or dependencies._
+- _Mention related user stories or issues (if applicable)._
+
+---
+
+##  **Acceptance criteria**  
+```gherkin
+Scenario: <Short Description>
+Given <initial context or system state>
+When <user performs an action>
+Then <expected outcome or behavior>
+And <optional additional conditions>
-- 
2.49.0


From bbfdbdc904c23e505cfc17ce8acabfeac23faebf Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sun, 8 Jun 2025 16:36:19 -0500
Subject: [PATCH 3/6] feat(json): agregar config.json

---
 config.json | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 config.json

diff --git a/config.json b/config.json
new file mode 100644
index 0000000..424558d
--- /dev/null
+++ b/config.json
@@ -0,0 +1,5 @@
+{
+    "version": 1.0,
+    "name": "Proyecto - PC3",
+    "team": "Grupo 6"
+}
-- 
2.49.0


From 273795ca177f78139503517c10dc3ba17a7c209e Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sun, 8 Jun 2025 16:47:24 -0500
Subject: [PATCH 4/6] feat(py): crear config_modifier.py para leer archivos
 .json

---
 main.py                |  4 ++++
 src/config_modifier.py | 18 ++++++++++++++++++
 2 files changed, 22 insertions(+)
 create mode 100644 main.py

diff --git a/main.py b/main.py
new file mode 100644
index 0000000..fedf617
--- /dev/null
+++ b/main.py
@@ -0,0 +1,4 @@
+from src.config_modifier import leer_json
+
+data = leer_json("config.json")
+print(data)
\ No newline at end of file
diff --git a/src/config_modifier.py b/src/config_modifier.py
index e69de29..2ee1086 100644
--- a/src/config_modifier.py
+++ b/src/config_modifier.py
@@ -0,0 +1,18 @@
+import json
+import os
+
+def leer_json(file_path):
+    
+    """
+    Lee el archivo JSON desde el sistema de archivos y 
+    devuelve su contenido como un diccionario
+    """
+
+    if not os.path.exists(file_path):
+        raise FileNotFoundError(f"No existe el archivo '{file_path}'")
+    
+    with open(file_path, 'r', encoding='utf-8') as f:
+        try:
+            return json.load(f)
+        except json.JSONDecodeError:
+            raise ValueError(f"El archivo '{file_path}' no contiene un JSON válido")
\ No newline at end of file
-- 
2.49.0


From 5877f7826ad57929cef4c247e7ac24f831ecddf0 Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sun, 8 Jun 2025 17:04:36 -0500
Subject: [PATCH 5/6] feat(structure): crear .gitignore requirements.txt

---
 .gitignore       | 2 ++
 requirements.txt | 1 +
 2 files changed, 3 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 requirements.txt

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3cf8c6d
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+env
+__pycache__
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..55b033e
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1 @@
+pytest
\ No newline at end of file
-- 
2.49.0


From 4fbcb722b42e69d4b0acfba726c1f2725a36a05e Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sun, 8 Jun 2025 17:07:29 -0500
Subject: [PATCH 6/6] feat(refactor): agregar incrementar_version en
 config_modifier.py

---
 config.json            |  4 ++--
 main.py                |  7 +++++--
 src/config_modifier.py | 27 +++++++++++++++++++++++----
 3 files changed, 30 insertions(+), 8 deletions(-)

diff --git a/config.json b/config.json
index 424558d..018ae14 100644
--- a/config.json
+++ b/config.json
@@ -1,5 +1,5 @@
 {
-    "version": 1.0,
+    "version": 2.0,
     "name": "Proyecto - PC3",
     "team": "Grupo 6"
-}
+}
\ No newline at end of file
diff --git a/main.py b/main.py
index fedf617..fec53dc 100644
--- a/main.py
+++ b/main.py
@@ -1,4 +1,7 @@
-from src.config_modifier import leer_json
+from src.config_modifier import leer_json, incrementar_version
 
 data = leer_json("config.json")
-print(data)
\ No newline at end of file
+print(data)
+
+numero_version = incrementar_version("config.json")
+print(f"Nueva versión: {numero_version}")
diff --git a/src/config_modifier.py b/src/config_modifier.py
index 2ee1086..b56b5e7 100644
--- a/src/config_modifier.py
+++ b/src/config_modifier.py
@@ -1,18 +1,37 @@
 import json
 import os
 
+
 def leer_json(file_path):
-    
     """
-    Lee el archivo JSON desde el sistema de archivos y 
+    Lee el archivo JSON desde el sistema de archivos y
     devuelve su contenido como un diccionario
     """
 
     if not os.path.exists(file_path):
         raise FileNotFoundError(f"No existe el archivo '{file_path}'")
-    
+
     with open(file_path, 'r', encoding='utf-8') as f:
         try:
             return json.load(f)
         except json.JSONDecodeError:
-            raise ValueError(f"El archivo '{file_path}' no contiene un JSON válido")
\ No newline at end of file
+            raise ValueError(f"El archivo '{file_path}' no contiene un JSON válido")
+
+
+def incrementar_version(file_path):
+    """
+    Incrementa el campo "version" del archivo JSON
+    """
+
+    config = leer_json(file_path)
+
+    if "version" not in config:
+        raise KeyError("No existe el campo 'version' en el archivo JSON")
+
+    if not isinstance(config['version'], (int, float)):
+        raise TypeError("El campo 'version' no es un número")
+
+    config["version"] += 1
+    with open(file_path, 'w', encoding='utf-8') as f:
+        json.dump(config, f, indent=4)
+    return config["version"]
-- 
2.49.0

